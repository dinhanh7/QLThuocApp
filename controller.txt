//This is code of: HoaDonController.java
package controller;

import dao.HoaDonDAO;
import entities.HoaDon;

import java.util.List;

/**
 * HoaDonController.java
 *
 * Kết nối giữa GUI và DAO cho Hóa đơn.
 * ĐÃ SỬA: Hỗ trợ bắt lỗi từ DAO và truyền thông báo lỗi về GUI.
 */
public class HoaDonController {

    private HoaDonDAO hoaDonDAO;

    public HoaDonController() {
        hoaDonDAO = new HoaDonDAO();
    }

    /**
     * Lấy tất cả hóa đơn.
     */
    public List<HoaDon> getAllHoaDon() {
        return hoaDonDAO.getAllHoaDon();
    }

    /**
     * Thêm mới hóa đơn, trả về true nếu thành công, false nếu lỗi.
     * @param hd        Đối tượng hóa đơn cần thêm.
     * @param errorMsg  Nếu có lỗi sẽ nhận được message lỗi để GUI hiển thị.
     */
    public boolean addHoaDon(HoaDon hd, StringBuilder errorMsg) {
        try {
            return hoaDonDAO.insertHoaDon(hd);
        } catch (RuntimeException ex) {
            if (errorMsg != null) errorMsg.append(ex.getMessage());
            return false;
        }
    }

    /**
     * Cập nhật hóa đơn, trả về true nếu thành công, false nếu lỗi.
     * @param hd        Đối tượng hóa đơn cần sửa.
     * @param errorMsg  Nếu có lỗi sẽ nhận được message lỗi để GUI hiển thị.
     */
    public boolean updateHoaDon(HoaDon hd, StringBuilder errorMsg) {
        try {
            return hoaDonDAO.updateHoaDon(hd);
        } catch (RuntimeException ex) {
            if (errorMsg != null) errorMsg.append(ex.getMessage());
            return false;
        }
    }

    /**
     * Xóa hóa đơn theo idHD.
     * @param idHD      Mã hóa đơn cần xóa.
     * @param errorMsg  Nếu có lỗi sẽ nhận được message lỗi để GUI hiển thị.
     */
    public boolean deleteHoaDon(String idHD, StringBuilder errorMsg) {
        try {
            return hoaDonDAO.deleteHoaDon(idHD);
        } catch (RuntimeException ex) {
            if (errorMsg != null) errorMsg.append(ex.getMessage());
            return false;
        }
    }

    /**
     * Tìm kiếm hóa đơn theo idHD, idNV, idKH.
     * Nếu tham số rỗng thì trả về toàn bộ danh sách.
     */
    public List<HoaDon> searchHoaDon(String idHD, String idNV, String idKH) {
        return hoaDonDAO.searchHoaDon(idHD, idNV, idKH);
    }
}

//This is code of: HopDongController.java
package controller;

import dao.HopDongDAO;
import entities.HopDong;

import java.util.List;

/**
 * HopDongController.java
 *
 * Kết nối giữa GUI và DAO cho HopDong.
 */
public class HopDongController {

    private HopDongDAO hopDongDAO;

    public HopDongController() {
        hopDongDAO = new HopDongDAO();
    }

    public List<HopDong> getAllHopDong() {
        return hopDongDAO.getAllHopDong();
    }

    public boolean addHopDong(HopDong hd) {
        return hopDongDAO.insertHopDong(hd);
    }

    public boolean updateHopDong(HopDong hd) {
        return hopDongDAO.updateHopDong(hd);
    }

    public boolean deleteHopDong(String idHDong) {
        return hopDongDAO.deleteHopDong(idHDong);
    }

    /**
     * Tìm kiếm HopDong theo idHDong, idNV hoặc idNCC.
     */
    public List<HopDong> searchHopDong(String idHDong, String idNV, String idNCC) {
        return hopDongDAO.searchHopDong(idHDong, idNV, idNCC);
    }
}

//This is code of: KhachHangController.java
package controller;

import dao.KhachHangDAO;
import entities.KhachHang;

import java.util.List;

/**
 * KhachHangController.java
 *
 * Giữ nguyên các phương thức CRUD cơ bản (getAllKhachHang, addKhachHang, updateKhachHang, deleteKhachHang),
 * và bổ sung thêm searchKhachHang(String hoTen, String sdt).
 */
public class KhachHangController {

    private KhachHangDAO khachHangDAO;

    public KhachHangController() {
        khachHangDAO = new KhachHangDAO();
    }

    public List<KhachHang> getAllKhachHang() {
        return khachHangDAO.getAll();
    }

    public boolean addKhachHang(KhachHang kh, StringBuilder errorMsg) {
        try {
            return khachHangDAO.insert(kh);
        } catch (RuntimeException ex) {
            if (errorMsg != null) errorMsg.append(ex.getMessage());
            return false;
        }
    }

    public boolean updateKhachHang(KhachHang kh, StringBuilder errorMsg) {
        try {
            return khachHangDAO.update(kh);
        } catch (RuntimeException ex) {
            if (errorMsg != null) errorMsg.append(ex.getMessage());
            return false;
        }
    }

    public boolean deleteKhachHang(String idKH, StringBuilder errorMsg) {
        try {
            return khachHangDAO.delete(idKH);
        } catch (RuntimeException ex) {
            if (errorMsg != null) errorMsg.append(ex.getMessage());
            return false;
        }
    }


    /**
     * Tìm kiếm Khách hàng theo hoTen hoặc sdt.
     * Nếu cả hai tham số đều rỗng, trả về toàn bộ danh sách.
     */
    public List<KhachHang> searchKhachHang(String hoTen, String sdt) {
        return khachHangDAO.search(hoTen, sdt);
    }

    public KhachHang getBySDT(String sdt) {
        return khachHangDAO.getBySDT(sdt);
    }
}

//This is code of: LoginController.java
package controller;

import dao.TaiKhoanDAO;
import entities.TaiKhoan;

/**
 * LoginController.java
 * Xử lý nghiệp vụ liên quan đến đăng nhập.
 */
public class LoginController {

    private TaiKhoanDAO taiKhoanDAO;

    public LoginController() {
        taiKhoanDAO = new TaiKhoanDAO();
    }

    /**
     * Kiểm tra username/password. Nếu hợp lệ, trả về đối tượng TaiKhoan (chứa cả idVT).
     * Nếu không, trả về null.
     */
    public TaiKhoan authenticateAndGetAccount(String username, String password) {
        if (username == null || username.trim().isEmpty()
                || password == null || password.trim().isEmpty()) {
            return null;
        }

        // Lấy TaiKhoan theo username
        TaiKhoan tk = taiKhoanDAO.getByUsername(username);
        // Nếu tồn tại và password khớp
        if (tk != null && tk.getPassword().equals(password)) {
            return tk;
        }
        return null;
    }
}

//This is code of: NhaCungCapController.java
package controller;

import dao.NhaCungCapDAO;
import entities.NhaCungCap;

import java.util.List;

/**
 * NhaCungCapController.java
 *
 * Giúp gọi tới các phương thức của DAO, đồng thời có thể bổ sung logic nghiệp vụ nếu cần.
 */
public class NhaCungCapController {

    private NhaCungCapDAO nccDAO;

    public NhaCungCapController() {
        nccDAO = new NhaCungCapDAO();
    }

    public List<NhaCungCap> getAllNhaCungCap() {
        return nccDAO.getAll();
    }

    public boolean addNhaCungCap(NhaCungCap ncc) {
        return nccDAO.insert(ncc);
    }

    public boolean updateNhaCungCap(NhaCungCap ncc) {
        return nccDAO.update(ncc);
    }

    public boolean deleteNhaCungCap(String idNCC) {
        return nccDAO.delete(idNCC);
    }

    /**
     * Tìm kiếm Nhà cung cấp theo idNCC hoặc tenNCC.
     */
    public List<NhaCungCap> searchNhaCungCap(String idNCC, String tenNCC) {
        return nccDAO.search(idNCC, tenNCC);
    }
}

//This is code of: NhanVienController.java
package controller;

import dao.NhanVienDAO;
import entities.NhanVien;

import java.util.List;

/**
 * NhanVienController.java
 *
 * Kết nối giữa GUI và DAO cho NhanVien.
 */
public class NhanVienController {

    private NhanVienDAO nhanVienDAO;

    public NhanVienController() {
        nhanVienDAO = new NhanVienDAO();
    }

    public List<NhanVien> getAllNhanVien() {
        return nhanVienDAO.getAll();
    }

    public boolean addNhanVien(NhanVien nv) {
        return nhanVienDAO.insert(nv);
    }

    public boolean updateNhanVien(NhanVien nv) {
        return nhanVienDAO.update(nv);
    }

    public boolean deleteNhanVien(String idNV) {
        return nhanVienDAO.delete(idNV);
    }

    /**
     * Tìm kiếm NhanVien theo idNV hoặc hoTen.
     */
    public List<NhanVien> searchNhanVien(String idNV, String hoTen) {
        return nhanVienDAO.search(idNV, hoTen);
    }
}

//This is code of: PhanHoiController.java
package controller;

import dao.PhanHoiDAO;
import entities.PhanHoi;

import java.util.List;

/**
 * PhanHoiController.java
 *
 * Giữ nguyên các phương thức CRUD cơ bản (getAllPhanHoi, addPhanHoi, updatePhanHoi, deletePhanHoi),
 * và bổ sung thêm searchPhanHoi(String idPH, String idKH).
 */
public class PhanHoiController {

    private PhanHoiDAO phanHoiDAO;

    public PhanHoiController() {
        phanHoiDAO = new PhanHoiDAO();
    }

    public List<PhanHoi> getAllPhanHoi() {
        return phanHoiDAO.getAll();
    }

    public boolean addPhanHoi(PhanHoi ph) {
        return phanHoiDAO.insert(ph);
    }

    public boolean updatePhanHoi(PhanHoi ph) {
        return phanHoiDAO.update(ph);
    }

    public boolean deletePhanHoi(String idPH) {
        return phanHoiDAO.delete(idPH);
    }

    /**
     * Tìm kiếm Phản hồi theo idPH hoặc idKH.
     * Nếu cả hai tham số đều rỗng, trả về toàn bộ danh sách.
     */
    public List<PhanHoi> searchPhanHoi(String idPH, String idKH) {
        return phanHoiDAO.search(idPH, idKH);
    }
}

//This is code of: PhieuNhapController.java
package controller;

import dao.PhieuNhapDAO;
import entities.PhieuNhap;

import java.util.List;

/**
 * PhieuNhapController.java
 *
 * Giữ nguyên các phương thức CRUD cơ bản (getAllPhieuNhap, addPhieuNhap, updatePhieuNhap, deletePhieuNhap),
 * và bổ sung thêm searchPhieuNhap(String idPN, String idNV, String idNCC).
 */
public class PhieuNhapController {

    private PhieuNhapDAO phieuNhapDAO;

    public PhieuNhapController() {
        phieuNhapDAO = new PhieuNhapDAO();
    }

    public List<PhieuNhap> getAllPhieuNhap() {
        return phieuNhapDAO.getAll();
    }

    public boolean addPhieuNhap(PhieuNhap pn) {
        return phieuNhapDAO.insert(pn);
    }

    public boolean updatePhieuNhap(PhieuNhap pn) {
        return phieuNhapDAO.update(pn);
    }

    public boolean deletePhieuNhap(String idPN) {
        return phieuNhapDAO.delete(idPN);
    }

    /**
     * Tìm kiếm Phiếu Nhập theo idPN hoặc idNV hoặc idNCC.
     * Nếu cả ba tham số đều rỗng, trả về toàn bộ danh sách.
     */
    public List<PhieuNhap> searchPhieuNhap(String idPN, String idNV, String idNCC) {
        return phieuNhapDAO.search(idPN, idNV, idNCC);
    }
}

//This is code of: ThuocController.java
package controller;

import dao.ThuocDAO;
import entities.Thuoc;

import java.util.List;

/**
 * ThuocController.java
 *
 * Kết nối giữa GUI và DAO cho Thuốc.
 */
public class ThuocController {

    private ThuocDAO thuocDAO;

    public ThuocController() {
        thuocDAO = new ThuocDAO();
    }

    public List<Thuoc> getAllThuoc() {
        return thuocDAO.getAllThuoc();
    }

    public boolean addThuoc(Thuoc t) {
        return thuocDAO.insertThuoc(t);
    }

    public boolean updateThuoc(Thuoc t) {
        return thuocDAO.updateThuoc(t);
    }

    public boolean deleteThuoc(String idThuoc, StringBuilder errorMessage) {
        try {
            return thuocDAO.deleteThuoc(idThuoc);
        } catch (RuntimeException ex) {
            if (errorMessage != null) errorMessage.append(ex.getMessage());
            return false;
        }
    }

    /**
     * Tìm kiếm Thuốc theo idThuoc hoặc tenThuoc.
     */
    public List<Thuoc> searchThuoc(String idThuoc, String tenThuoc) {
        return thuocDAO.searchThuoc(idThuoc, tenThuoc);
    }
}
